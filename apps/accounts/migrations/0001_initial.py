# Generated by Django 5.0.1 on 2024-02-02 18:18

import apps.accounts.manager
import apps.accounts.validators
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_jalali.db.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', django_jalali.db.models.jDateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', django_jalali.db.models.jDateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('deleted_at', django_jalali.db.models.jDateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('restored_at', django_jalali.db.models.jDateTimeField(blank=True, null=True, verbose_name='Restored at')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=45, null=True, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('phone_number', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+989199999933' or '09199999999'.", regex='^(\\+98|0)?9\\d{9}$')], verbose_name='Phone Number')),
                ('birthday', models.DateField(blank=True, null=True, validators=[apps.accounts.validators.validate_birthday], verbose_name='Birthday')),
                ('user_role', models.CharField(choices=[('EM', 'Employee'), ('CU', 'Customer'), ('MA', 'Manager')], default='CU', max_length=2, verbose_name='User Role')),
                ('gender', models.CharField(choices=[('W', 'Woman'), ('M', 'Man')], default='W', max_length=1, verbose_name='Gender')),
                ('national_code', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='National Code')),
                ('user_image', models.ImageField(blank=True, null=True, upload_to='user_img/', verbose_name='User Image')),
                ('is_active', models.BooleanField(default=False, verbose_name='Is Active?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('first_name',),
            },
            managers=[
                ('objects', apps.accounts.manager.LogicalManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postal_code', models.CharField(max_length=10, verbose_name='Postal Code')),
                ('country', models.CharField(default='Iran', max_length=50, verbose_name='Country')),
                ('province', models.CharField(max_length=50, verbose_name='Province')),
                ('city', models.CharField(max_length=50, verbose_name='City')),
                ('main_street', models.CharField(max_length=50, verbose_name='Main Street')),
                ('address_detail', models.TextField(verbose_name='Address Deatail')),
                ('house_number', models.CharField(max_length=4, verbose_name='House Number')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.AddIndex(
            model_name='customeruser',
            index=models.Index(fields=['first_name'], name='accounts_cu_first_n_972850_idx'),
        ),
    ]
